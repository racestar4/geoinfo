/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
/**
 * Defines a custom map style.
 * @record
 */
export function ICustomMapStyle() { }
function ICustomMapStyle_tsickle_Closure_declarations() {
    /**
     * A list of map elements to be styled.
     * @type {?}
     */
    ICustomMapStyle.prototype.elements;
    /**
     * Global Settings.
     * @type {?|undefined}
     */
    ICustomMapStyle.prototype.settings;
    /**
     * The version of the style syntax used.
     * @type {?|undefined}
     */
    ICustomMapStyle.prototype.version;
}
/**
 * Map Elements which can be styled.
 * @record
 */
export function IMapElements() { }
function IMapElements_tsickle_Closure_declarations() {
    /**
     * Admin1, state, province, etc.
     * @type {?|undefined}
     */
    IMapElements.prototype.adminDistrict;
    /**
     * Icon representing the capital of a state/province.
     * @type {?|undefined}
     */
    IMapElements.prototype.adminDistrictCapital;
    /**
     * Area of land encompassing an airport.
     * @type {?|undefined}
     */
    IMapElements.prototype.airport;
    /**
     * Area of land use, not to be confused with Structure
     * @type {?|undefined}
     */
    IMapElements.prototype.area;
    /**
     * An arterial road is a high-capacity urban road. Its primary function is to deliver traffic from collector roads to freeways or expressways, and between urban centers efficiently.
     * @type {?|undefined}
     */
    IMapElements.prototype.arterialRoad;
    /**
     * A structure such as a house, store, factory.
     * @type {?|undefined}
     */
    IMapElements.prototype.building;
    /**
     * Restaurant, hospital, school, etc.
     * @type {?|undefined}
     */
    IMapElements.prototype.business;
    /**
     * Icon representing the capital populated place.
     * @type {?|undefined}
     */
    IMapElements.prototype.capital;
    /**
     * Area of a cemetery
     * @type {?|undefined}
     */
    IMapElements.prototype.cemetery;
    /**
     * Area of a whole continent
     * @type {?|undefined}
     */
    IMapElements.prototype.continent;
    /**
     * A controlled-access highway is a type of road which has been designed for high-speed vehicular traffic, with all traffic flow and ingress/egress regulated. Also known as a highway, freeway, motorway, expressway, interstate, parkway.
     * @type {?|undefined}
     */
    IMapElements.prototype.controlledAccessHighway;
    /**
     * A country or independent sovereign state.
     * @type {?|undefined}
     */
    IMapElements.prototype.countryRegion;
    /**
     * Icon representing the capital of a country/region.
     * @type {?|undefined}
     */
    IMapElements.prototype.countryRegionCapital;
    /**
     * Admin2, county, etc.
     * @type {?|undefined}
     */
    IMapElements.prototype.district;
    /**
     * An area of land used for educational purposes such as a school campus.
     * @type {?|undefined}
     */
    IMapElements.prototype.education;
    /**
     * A school or other educational building.
     * @type {?|undefined}
     */
    IMapElements.prototype.educationBuilding;
    /**
     * Restaurant, cafï¿½, etc.
     * @type {?|undefined}
     */
    IMapElements.prototype.foodPoint;
    /**
     * Area of forest land.
     * @type {?|undefined}
     */
    IMapElements.prototype.forest;
    /**
     * An area of land where the game of golf is played.
     * @type {?|undefined}
     */
    IMapElements.prototype.golfCourse;
    /**
     * Lines representing ramps typically alongside ControlledAccessHighways
     * @type {?|undefined}
     */
    IMapElements.prototype.highSpeedRamp;
    /**
     * A highway.
     * @type {?|undefined}
     */
    IMapElements.prototype.highway;
    /**
     * An area of land reserved for Indigenous people.
     * @type {?|undefined}
     */
    IMapElements.prototype.indigenousPeoplesReserve;
    /**
     * Labeling of area of an island.
     * @type {?|undefined}
     */
    IMapElements.prototype.island;
    /**
     * Major roads.
     * @type {?|undefined}
     */
    IMapElements.prototype.majorRoad;
    /**
     * The base map element in which all other map elements inherit from.
     * @type {?|undefined}
     */
    IMapElements.prototype.mapElement;
    /**
     * Area of land used for medical purposes. Generally, hospital campuses.
     * @type {?|undefined}
     */
    IMapElements.prototype.medical;
    /**
     * A building which provides medical services.
     * @type {?|undefined}
     */
    IMapElements.prototype.medicalBuilding;
    /**
     * A military area.
     * @type {?|undefined}
     */
    IMapElements.prototype.military;
    /**
     * A natural point of interest.
     * @type {?|undefined}
     */
    IMapElements.prototype.naturalPoint;
    /**
     * Area of land used for nautical purposes.
     * @type {?|undefined}
     */
    IMapElements.prototype.nautical;
    /**
     * Area defined as a neighborhood. Labels only.
     * @type {?|undefined}
     */
    IMapElements.prototype.neighborhood;
    /**
     * Area of any kind of park.
     * @type {?|undefined}
     */
    IMapElements.prototype.park;
    /**
     * Icon representing the peak of a mountain.
     * @type {?|undefined}
     */
    IMapElements.prototype.peak;
    /**
     * Extracted pitches such as a baseball field or tennis court.
     * @type {?|undefined}
     */
    IMapElements.prototype.playingField;
    /**
     * All point features that are rendered with an icon of some sort
     * @type {?|undefined}
     */
    IMapElements.prototype.point;
    /**
     * Restaurant, hospital, school, marina, ski area, etc.
     * @type {?|undefined}
     */
    IMapElements.prototype.pointOfInterest;
    /**
     * A political border.
     * @type {?|undefined}
     */
    IMapElements.prototype.political;
    /**
     * Icon representing size of populated place (city, town, etc).
     * @type {?|undefined}
     */
    IMapElements.prototype.populatedPlace;
    /**
     * Railway lines
     * @type {?|undefined}
     */
    IMapElements.prototype.railway;
    /**
     * Line representing the connecting entrance/exit to a highway.
     * @type {?|undefined}
     */
    IMapElements.prototype.ramp;
    /**
     * Area of nature reserve.
     * @type {?|undefined}
     */
    IMapElements.prototype.reserve;
    /**
     * River, stream, or other passage. Note that this may be a line or polygon and may connect to non-river water bodies.
     * @type {?|undefined}
     */
    IMapElements.prototype.river;
    /**
     * Lines that represent all roads
     * @type {?|undefined}
     */
    IMapElements.prototype.road;
    /**
     * Icon representing the exit, typically from a controlled access highway.
     * @type {?|undefined}
     */
    IMapElements.prototype.roadExit;
    /**
     * Land area covered by a runway. See also Airport for the land area of the whole airport.
     * @type {?|undefined}
     */
    IMapElements.prototype.runway;
    /**
     * Area generally used for beaches, but could be used for sandy areas/golf bunkers in the future.
     * @type {?|undefined}
     */
    IMapElements.prototype.sand;
    /**
     * A shopping center or mall.
     * @type {?|undefined}
     */
    IMapElements.prototype.shoppingCenter;
    /**
     * Area of a stadium.
     * @type {?|undefined}
     */
    IMapElements.prototype.stadium;
    /**
     * A street.
     * @type {?|undefined}
     */
    IMapElements.prototype.street;
    /**
     * Buildings and other building-like structures
     * @type {?|undefined}
     */
    IMapElements.prototype.structure;
    /**
     * A toll road.
     * @type {?|undefined}
     */
    IMapElements.prototype.tollRoad;
    /**
     * Walking trail, either through park or hiking trail
     * @type {?|undefined}
     */
    IMapElements.prototype.trail;
    /**
     * Icon representing a bus stop, train stop, airport, etc.
     * @type {?|undefined}
     */
    IMapElements.prototype.transit;
    /**
     * A transit building.
     * @type {?|undefined}
     */
    IMapElements.prototype.transitBuilding;
    /**
     * Lines that are part of the transportation network (roads, trains, ferries, etc)
     * @type {?|undefined}
     */
    IMapElements.prototype.transportation;
    /**
     * An unpaved street.
     * @type {?|undefined}
     */
    IMapElements.prototype.unpavedStreet;
    /**
     * Forests, grassy areas, etc.
     * @type {?|undefined}
     */
    IMapElements.prototype.vegetation;
    /**
     * Icon representing the peak of a volcano.
     * @type {?|undefined}
     */
    IMapElements.prototype.volcanicPeak;
    /**
     * Anything that looks like water
     * @type {?|undefined}
     */
    IMapElements.prototype.water;
    /**
     * Icon representing a water feature location such as a waterfall.
     * @type {?|undefined}
     */
    IMapElements.prototype.waterPoint;
    /**
     * Ferry route lines
     * @type {?|undefined}
     */
    IMapElements.prototype.waterRoute;
}
/**
 * The styles options that can be applied to map elements.
 * @record
 */
export function IMapElementStyle() { }
function IMapElementStyle_tsickle_Closure_declarations() {
    /**
     * Hex color used for filling polygons, the background of point icons, and for the center of lines if they have split.
     * @type {?|undefined}
     */
    IMapElementStyle.prototype.fillColor;
    /**
     * The hex color of a map label.
     * @type {?|undefined}
     */
    IMapElementStyle.prototype.labelColor;
    /**
     * The outline hex color of a map label.
     * @type {?|undefined}
     */
    IMapElementStyle.prototype.labelOutlineColor;
    /**
     * Species if a map label type is visible or not.
     * @type {?|undefined}
     */
    IMapElementStyle.prototype.labelVisible;
    /**
     * Hex color used for the outline around polygons, the outline around point icons, and the color of lines.
     * @type {?|undefined}
     */
    IMapElementStyle.prototype.strokeColor;
    /**
     * Specifies if the map element is visible or not.
     * @type {?|undefined}
     */
    IMapElementStyle.prototype.visible;
}
/**
 * The style options that can be appliction to bordered map elements.
 * @record
 */
export function IBorderedMapElementStyle() { }
function IBorderedMapElementStyle_tsickle_Closure_declarations() {
    /**
     * Secondary/casing line hex color of the border of a filled polygon.
     * @type {?|undefined}
     */
    IBorderedMapElementStyle.prototype.borderOutlineColor;
    /**
     * Primary line hex color of the border of a filled polygon.
     * @type {?|undefined}
     */
    IBorderedMapElementStyle.prototype.borderStrokeColor;
    /**
     * Specifies if a border is visible or not.
     * @type {?|undefined}
     */
    IBorderedMapElementStyle.prototype.borderVisible;
}
/**
 * Global style settings
 * @record
 */
export function ISettingStyle() { }
function ISettingStyle_tsickle_Closure_declarations() {
    /**
     * A hex color value that all land is first flushed to before things are drawn on it.
     * @type {?|undefined}
     */
    ISettingStyle.prototype.landColor;
    /**
     * Specifies whether or not to draw elevation shading on the map.
     * @type {?|undefined}
     */
    ISettingStyle.prototype.shadedReliefVisible;
}

//# sourceMappingURL=data:application/json;base64,